{"ast":null,"code":"import _slicedToArray from \"/Users/rorysmith/codeclan_work/week_13/day_1/all_pirates_start_point/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/rorysmith/codeclan_work/week_13/day_1/all_pirates_start_point/src/containers/RaidContainer.js\";\n\nimport React, { useState, useEffect } from \"react\";\n\nvar RaidContainer = function RaidContainer() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      raids = _useState2[0],\n      setRaids = _useState2[1];\n\n  var fetchRaids = function fetchRaids() {\n    fetch(\"/api/raids\").then(function (result) {\n      return result.json();\n    }).then(function (data) {\n      return setRaids(data);\n    });\n  };\n\n  useEffect(function () {\n    fetchRaids();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"I am the raid container\");\n};\n\nexport default RaidContainer;","map":{"version":3,"sources":["/Users/rorysmith/codeclan_work/week_13/day_1/all_pirates_start_point/src/containers/RaidContainer.js"],"names":["React","useState","useEffect","RaidContainer","raids","setRaids","fetchRaids","fetch","then","result","json","data"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA,kBAEEF,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,MAEjBG,KAFiB;AAAA,MAEVC,QAFU;;AAIxB,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBC,IAAAA,KAAK,CAAC,YAAD,CAAL,CACCC,IADD,CACM,UAAAC,MAAM;AAAA,aAAIA,MAAM,CAACC,IAAP,EAAJ;AAAA,KADZ,EAECF,IAFD,CAEM,UAAAG,IAAI;AAAA,aAAIN,QAAQ,CAACM,IAAD,CAAZ;AAAA,KAFV;AAGH,GAJD;;AAMAT,EAAAA,SAAS,CAAC,YAAM;AACZI,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ;AAGH,CAjBD;;AAmBA,eAAeH,aAAf","sourcesContent":["import React, { useState, useEffect} from \"react\";\n\nconst RaidContainer = () => {\n\n    const [raids, setRaids] = useState([]);\n\n    const fetchRaids = () => {\n        fetch(\"/api/raids\")\n        .then(result => result.json())\n        .then(data => setRaids(data))\n    }\n\n    useEffect(() => {\n        fetchRaids()\n    }, [])\n\n    return(\n        <p>I am the raid container</p>\n    )\n}\n\nexport default RaidContainer;"]},"metadata":{},"sourceType":"module"}